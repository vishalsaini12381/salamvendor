{"ast":null,"code":"var _jsxFileName = \"/home/shivendra/Desktop/techoffice/salamvendor/vendorclient/src/DataTable.js\";\nimport moment from 'moment'; // Example for onSort prop\n\nimport React, { Component } from 'react'; // Import React\n\nimport axios from 'axios';\nimport { render } from 'react-dom'; // Import render method\n\nimport Datatable from 'react-bs-datatable'; // Import this package\n\nclass DataTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contList: []\n    };\n    this.productFetch = this.productFetch.bind(this);\n  }\n\n  productFetch() {\n    axios.post('http://localhost:3200/api/fetchProduct', {// userId: this.props.userId,\n      // email: this.props.email,\n    }).then(resp => {\n      console.log('##################', resp.data.user);\n      this.setState({\n        contList: resp.data.user\n      });\n    });\n  }\n\n  componentWillMount() {\n    this.productFetch();\n  }\n\n  render() {\n    console.log('XXXXXXXXXXXXXXXXXXXXXXXX', this.state.contList.map((e, i) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, e);\n    }));\n    const header = [// { title: 'Username', prop: 'username', sortable: true, filterable: true },\n    // { title: 'Name', prop: 'realname', sortable: true },\n    // { title: 'Name Uppercased', prop: 'realnameuppercase', cell: (row) => row.realname.toUpperCase() },\n    // { title: 'Location', prop: 'location' },\n    // { title: 'Last Updated', prop: 'date', sortable: true },\n    this.state.contList.map((e, i) => {\n      return React.createElement(React.Fragment, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"#P1001\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, e.category), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, e.productName), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, e.productPrice), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, e.quantity), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"custom-switch m-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        value: \"1\",\n        className: \"custom-switch-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"custom-switch-indicator\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })));\n    })];\n    const body = [this.state.contList.map((e, i) => {\n      return React.createElement(React.Fragment, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"#P1001\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, e.category), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, e.productName), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, e.productPrice), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, e.quantity), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"custom-switch m-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        value: \"1\",\n        className: \"custom-switch-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"custom-switch-indicator\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })));\n    })];\n    const onSortFunction = {\n      date(columnValue) {\n        // Convert the string date format to UTC timestamp\n        // So the table could sort it by number instead of by string\n        return moment(columnValue, 'Do MMMM YYYY').valueOf();\n      }\n\n    };\n    const customLabels = {\n      first: '<<',\n      last: '>>',\n      prev: '<',\n      next: '>',\n      show: 'Display',\n      entries: 'rows',\n      noResults: 'There is no data to be displayed'\n    }; // In your render method\n\n    return React.createElement(Datatable, {\n      tableHeader: header,\n      tableBody: this.state.contList.map((e, i) => {\n        return React.createElement(React.Fragment, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, \"#P1001\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, e.category), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, e.productName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, e.productPrice), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, e.quantity), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-options\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"custom-switch m-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          value: \"1\",\n          className: \"custom-switch-input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"custom-switch-indicator\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        })))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        })));\n      }),\n      keyName: \"userTable\",\n      tableClass: \"striped hover responsive\",\n      rowsPerPage: 5,\n      rowsPerPageOption: [5, 10, 15, 20],\n      initialSort: {\n        prop: \"username\",\n        isAscending: true\n      },\n      onSort: onSortFunction,\n      labels: customLabels,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default DataTable;","map":{"version":3,"sources":["/home/shivendra/Desktop/techoffice/salamvendor/vendorclient/src/DataTable.js"],"names":["moment","React","Component","axios","render","Datatable","DataTable","constructor","props","state","contList","productFetch","bind","post","then","resp","console","log","data","user","setState","componentWillMount","map","e","i","header","category","productName","productPrice","quantity","body","onSortFunction","date","columnValue","valueOf","customLabels","first","last","prev","next","show","entries","noResults","prop","isAscending"],"mappings":"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","sourcesContent":["import moment from 'moment'; // Example for onSort prop\nimport React, { Component } from 'react'; // Import React\nimport axios from 'axios';\nimport { render } from 'react-dom'; // Import render method\nimport Datatable from 'react-bs-datatable'; // Import this package\n \nclass DataTable extends Component{ \n  constructor(props){\n    super(props);\n    this.state = {\n      contList : []\n    }\n    this.productFetch = this.productFetch.bind(this);\n   \n  }  \n\n  productFetch(){\n    axios.post('http://localhost:3200/api/fetchProduct',{\n      // userId: this.props.userId,\n      // email: this.props.email,\n    }).then((resp)=>{\n      console.log('##################',resp.data.user);\n      this.setState({\n       contList: resp.data.user,\n      })\n    })\n  }\n\n  componentWillMount (){\n    this.productFetch();\n  }\n\nrender(){\n  console.log('XXXXXXXXXXXXXXXXXXXXXXXX',this.state.contList.map((e,i)=>{\n    return(\n      <div>{e}</div>\n    )\n  }));\nconst header = [\n  // { title: 'Username', prop: 'username', sortable: true, filterable: true },\n  // { title: 'Name', prop: 'realname', sortable: true },\n  // { title: 'Name Uppercased', prop: 'realnameuppercase', cell: (row) => row.realname.toUpperCase() },\n  // { title: 'Location', prop: 'location' },\n  // { title: 'Last Updated', prop: 'date', sortable: true },\n  this.state.contList.map((e,i)=>{\n    return(\n      <React.Fragment key = {i}>\n            <tr>\n        <td>#P1001</td>\n        <td>{e.category}</td>\n        <td>{e.productName}</td>\n        <td>{e.productPrice}</td>\n        <td>{e.quantity}</td>\n  <td>\n  <div className=\"card-options\">\n      <label className=\"custom-switch m-0\">\n        <input type=\"checkbox\" value=\"1\" className=\"custom-switch-input\" />\n        <span className=\"custom-switch-indicator\"></span>\n      </label>\n    </div>\n  </td>\n  <td>\n  </td>\n</tr>\n </React.Fragment>\n  )\n  })\n];\n \nconst body = [\n  this.state.contList.map((e,i)=>{\n    return(\n      <React.Fragment key = {i}>\n            <tr>\n        <td>#P1001</td>\n        <td>{e.category}</td>\n        <td>{e.productName}</td>\n        <td>{e.productPrice}</td>\n        <td>{e.quantity}</td>\n  <td>\n  <div className=\"card-options\">\n      <label className=\"custom-switch m-0\">\n        <input type=\"checkbox\" value=\"1\" className=\"custom-switch-input\" />\n        <span className=\"custom-switch-indicator\"></span>\n      </label>\n    </div>\n  </td>\n  <td>\n  </td>\n</tr>\n </React.Fragment>\n  )\n  })\n];\n \nconst onSortFunction = {\n  date(columnValue) {\n    // Convert the string date format to UTC timestamp\n    // So the table could sort it by number instead of by string\n    return moment(columnValue, 'Do MMMM YYYY').valueOf();\n  },\n};\n \nconst customLabels = {\n  first: '<<',\n  last: '>>',\n  prev: '<',\n  next: '>',\n  show: 'Display',\n  entries: 'rows',\n  noResults: 'There is no data to be displayed',\n};\n \n// In your render method\nreturn(\n\n<Datatable\n  tableHeader={header}\n  tableBody={this.state.contList.map((e,i)=>{\n    return(\n      <React.Fragment key = {i}>\n            <tr>\n        <td>#P1001</td>\n        <td>{e.category}</td>\n        <td>{e.productName}</td>\n        <td>{e.productPrice}</td>\n        <td>{e.quantity}</td>\n  <td>\n  <div className=\"card-options\">\n      <label className=\"custom-switch m-0\">\n        <input type=\"checkbox\" value=\"1\" className=\"custom-switch-input\" />\n        <span className=\"custom-switch-indicator\"></span>\n      </label>\n    </div>\n  </td>\n  <td>\n  </td>\n</tr>\n </React.Fragment>\n  )\n  })}\n  keyName=\"userTable\"\n  tableClass=\"striped hover responsive\"\n  rowsPerPage={5}\n  rowsPerPageOption={[5, 10, 15, 20]}\n  initialSort={{prop: \"username\", isAscending: true}}\n  onSort={onSortFunction}\n  labels={customLabels}\n/>\n)\n}\n}\n\nexport default DataTable;"]},"metadata":{},"sourceType":"module"}