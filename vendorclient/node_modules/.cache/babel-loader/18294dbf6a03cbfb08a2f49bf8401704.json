{"ast":null,"code":"var _jsxFileName = \"/home/shivendra/Desktop/techoffice/salamvendor/vendorclient/src/DataTable.js\";\nimport moment from 'moment'; // Example for onSort prop\n\nimport React, { Component } from 'react'; // Import React\n\nimport axios from 'axios';\nimport { render } from 'react-dom'; // Import render method\n\nimport Datatable from 'react-bs-datatable'; // Import this package\n\nclass DataTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contList: []\n    };\n    this.productFetch = this.productFetch.bind(this);\n  }\n\n  productFetch() {\n    axios.post('http://localhost:3200/api/fetchProduct', {// userId: this.props.userId,\n      // email: this.props.email,\n    }).then(resp => {\n      console.log('##################', resp.data.user);\n      this.setState({\n        contList: resp.data.user\n      });\n    });\n  }\n\n  componentWillMount() {\n    this.productFetch();\n  }\n\n  render() {\n    console.log('XXXXXXXXXXXXXXXXXXXXXXXX', this.state.contList);\n    const header = [{\n      title: 'Username',\n      prop: 'username',\n      sortable: true,\n      filterable: true\n    }, {\n      title: 'Name',\n      prop: 'realname',\n      sortable: true\n    }, {\n      title: 'Name Uppercased',\n      prop: 'realnameuppercase',\n      cell: row => row.realname.toUpperCase()\n    }, {\n      title: 'Location',\n      prop: 'location'\n    }, {\n      title: 'Last Updated',\n      prop: 'date',\n      sortable: true\n    }];\n    const body = [{\n      username: 'i-am-billy',\n      realname: 'Billy',\n      location: 'Mars',\n      date: moment().subtract(1, 'days').format('Do MMMM YYYY')\n    }, {\n      username: 'john-nhoj',\n      realname: 'John',\n      location: 'Saturn',\n      date: moment().subtract(2, 'days').format('Do MMMM YYYY')\n    }];\n    const onSortFunction = {\n      date(columnValue) {\n        // Convert the string date format to UTC timestamp\n        // So the table could sort it by number instead of by string\n        return moment(columnValue, 'Do MMMM YYYY').valueOf();\n      }\n\n    };\n    const customLabels = {\n      first: '<<',\n      last: '>>',\n      prev: '<',\n      next: '>',\n      show: 'Display',\n      entries: 'rows',\n      noResults: 'There is no data to be displayed'\n    }; // In your render method\n\n    return React.createElement(Datatable, {\n      tableHeader: header,\n      tableBody: body,\n      keyName: \"userTable\",\n      tableClass: \"striped hover responsive\",\n      rowsPerPage: 5,\n      rowsPerPageOption: [5, 10, 15, 20],\n      initialSort: {\n        prop: \"username\",\n        isAscending: true\n      },\n      onSort: onSortFunction,\n      labels: customLabels,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default DataTable;","map":{"version":3,"sources":["/home/shivendra/Desktop/techoffice/salamvendor/vendorclient/src/DataTable.js"],"names":["moment","React","Component","axios","render","Datatable","DataTable","constructor","props","state","contList","productFetch","bind","post","then","resp","console","log","data","user","setState","componentWillMount","header","title","prop","sortable","filterable","cell","row","realname","toUpperCase","body","username","location","date","subtract","format","onSortFunction","columnValue","valueOf","customLabels","first","last","prev","next","show","entries","noResults","isAscending"],"mappings":"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","sourcesContent":["import moment from 'moment'; // Example for onSort prop\nimport React, { Component } from 'react'; // Import React\nimport axios from 'axios';\nimport { render } from 'react-dom'; // Import render method\nimport Datatable from 'react-bs-datatable'; // Import this package\n \nclass DataTable extends Component{ \n  constructor(props){\n    super(props);\n    this.state = {\n      contList : []\n    }\n    this.productFetch = this.productFetch.bind(this);\n   \n  }  \n\n  productFetch(){\n    axios.post('http://localhost:3200/api/fetchProduct',{\n      // userId: this.props.userId,\n      // email: this.props.email,\n    }).then((resp)=>{\n      console.log('##################',resp.data.user);\n      this.setState({\n       contList: resp.data.user,\n      })\n    })\n  }\n\n  componentWillMount (){\n    this.productFetch();\n  }\n\nrender(){\n  console.log('XXXXXXXXXXXXXXXXXXXXXXXX',this.state.contList);\nconst header = [\n  { title: 'Username', prop: 'username', sortable: true, filterable: true },\n  { title: 'Name', prop: 'realname', sortable: true },\n  { title: 'Name Uppercased', prop: 'realnameuppercase', cell: (row) => row.realname.toUpperCase() },\n  { title: 'Location', prop: 'location' },\n  { title: 'Last Updated', prop: 'date', sortable: true },\n];\n \nconst body = [\n  {\n    username: 'i-am-billy',\n    realname: 'Billy',\n    location: 'Mars',\n    date: moment().subtract(1, 'days').format('Do MMMM YYYY'),\n  },\n  {\n    username: 'john-nhoj',\n    realname: 'John',\n    location: 'Saturn',\n    date: moment().subtract(2, 'days').format('Do MMMM YYYY'),\n  }\n];\n \nconst onSortFunction = {\n  date(columnValue) {\n    // Convert the string date format to UTC timestamp\n    // So the table could sort it by number instead of by string\n    return moment(columnValue, 'Do MMMM YYYY').valueOf();\n  },\n};\n \nconst customLabels = {\n  first: '<<',\n  last: '>>',\n  prev: '<',\n  next: '>',\n  show: 'Display',\n  entries: 'rows',\n  noResults: 'There is no data to be displayed',\n};\n \n// In your render method\nreturn(\n\n<Datatable\n  tableHeader={header}\n  tableBody={body}\n  keyName=\"userTable\"\n  tableClass=\"striped hover responsive\"\n  rowsPerPage={5}\n  rowsPerPageOption={[5, 10, 15, 20]}\n  initialSort={{prop: \"username\", isAscending: true}}\n  onSort={onSortFunction}\n  labels={customLabels}\n/>\n)\n}\n}\n\nexport default DataTable;"]},"metadata":{},"sourceType":"module"}